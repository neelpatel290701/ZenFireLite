package com.example.zenfirelite.apis.datamodels

data class CustomerList_ServiceBilling_Response(
    val status: String,
    val requestId: Any?,
    val result: Result,
)

data class Result(
    val data: customerListData,
)

data class customerListData(
    val hits: List<customerListHit>,
    val count: Long,
)

data class customerListHit(
    val id: Long,
    val displayName: String,
    val cellphone: String,
    val landline: String,
    val customerIdentifier: String,
    val serviceAddresses: List<ServiceAddress>,
    val billingAddress: BillingAddress,
    val isActive: Boolean,
    val isDeleted: Boolean,
    val createdAt: String,
    val updatedAt: String,
    val companyId: Long,
    val createdUserId: Long,
    val isProspect: Boolean,
    val createdUser: String,
    val firstname: String?,
    val skipLevel: Boolean?,
    val updatedBy: String?,
    val lastname: String?,
    val customerUniqueId: String?,
    val createdBy: String?,
    val updatedUserId: Long?,
    val readyForSync: Boolean?,
    val ext: String?,
    val name: String?,
    val email: String?,
)

data class ServiceAddress(
    val id: Long,
    val firstname: String,
    val lastname: String,
    val additionalName: String,
    val name: String,
    val displayName: String,
    val customerIdentifier: String,
    val customerUniqueId: String,
    val email: String,
    val landline: String,
    val ext: String,
    val cellphone: String,
    val addressLine1: String,
    val addressLine2: String?,
    val country: String,
    val city: String,
    val state: String,
    val zipcode: String,
    val additionalContacts: List<AdditionalContact>?,
    val isProspect: Boolean,
    val addressTypeId: Long,
    val createdAt: String,
    val updatedAt: String,
    val isDeleted: Boolean,
    val isActive: Boolean,
    val doNotServe: Boolean,
    val customerId: Long,
    val rootCustomerId: Long?,
    val createdUserId: Long,
    val isParent: Boolean?,
    val companyId: Long,
    val notes: customerNotes?,
    val searchString: String?,
    val invoiceBalanceSum: Double?,
    val hasPendingServiceAgreements: Boolean?,
    val createdUser: String,
    val propertyTypeId: Long?,
    val rootParentId: Long?,
    val updatedBy: String?,
    val isTaxable: Boolean?,
    val quickbookData: QuickbookData?,
    val updatedUser: UpdatedUser?,
    val parentId: Any?,
    val createdBy: String?,
)

data class AdditionalContact(
    val name: String,
    val email: String,
    val cellphone: String,
    val landline: String,
    val ext: String,
    val addressId: Long,
    val companyId: Long,
    val createdUserId: Long,
    val updatedUserId: Long,
)

data class customerNotes(
    val text: String?,
    val id: Long?,
)

data class QuickbookData(
    val createdAt: String,
    val companyId: Long,
    val isSynced: Boolean,
    val updatedBy: String,
    val isDeleted: Boolean,
    val createdBy: String,
    val customerId: Long,
    val flowInvoiceInParent: Boolean,
    val id: Long,
    val updatedAt: String,
)

data class UpdatedUser(
    val lastName: String,
    val updatedBy: String,
    val roleId: Long,
    val about: String?,
    val isAdmin: Boolean,
    val isActive: Boolean,
    val firstName: String,
    val createdAt: String,
    val companyId: Long,
    val profilePhoto: Any?,
    val isDeleted: Boolean,
    val rateCriterion: String,
    val cellphone: String,
    val rateBasis: String,
    val id: Long,
    val currencyId: Long?,
    val email: String,
    val objectId: String?,
    val username: String,
    val updatedAt: String,
    val costRate: Any?,
    val timeZoneId: Long?,
    val landline: String?,
    val billableRate: Any?,
)

data class BillingAddress(
    val id: Long,
    val firstname: String,
    val lastname: String,
    val additionalName: String,
    val name: String,
    val displayName: String,
    val customerIdentifier: String,
    val customerUniqueId: String,
    val email: String,
    val landline: String,
    val ext: String,
    val cellphone: String,
    val addressLine1: String,
    val addressLine2: String,
    val country: String,
    val city: String,
    val state: String,
    val zipcode: String,
    val additionalContacts: List<AdditionalContact2>,
    val isProspect: Boolean,
    val addressTypeId: Long,
    val createdAt: String,
    val updatedAt: String,
    val isDeleted: Boolean,
    val isActive: Boolean,
    val doNotServe: Boolean,
    val customerId: Long,
    val createdUserId: Long,
    val isParent: Boolean,
    val companyId: Long,
    val notes: Notes2,
    val searchString: String,
    val invoiceBalanceSum: Double,
    val hasPendingServiceAgreements: Boolean,
    val createdUser: String,
    val propertyTypeId: Long?,
    val rootCustomerId: Long?,
    val parentId: String?,
    val paymentTermId: String?,
    val rootParentId: String?,
    val updatedBy: String?,
    val isTaxable: Boolean?,
    val createdBy: String?,
    val updatedUserId: Long?,
)


data class AdditionalContact2(
    val name: String,
    val email: String,
    val cellphone: String,
    val landline: String,
    val ext: String,
    val addressId: Long,
    val companyId: Long,
    val createdUserId: Long,
    val updatedUserId: Long,
    val updatedBy: String?,
    val isActive: Boolean?,
    val createdAt: String?,
    val isDeleted: Boolean?,
    val createdBy: String?,
    val id: Long?,
    val updatedAt: String?,
)

data class Notes2(
    val text: String?,
    val id: Long?,
)
